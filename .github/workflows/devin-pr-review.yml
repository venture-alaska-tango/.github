name: Devin PR Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
  repository_dispatch:
    types: [devin-pr-review]

permissions:
  contents: read
  pull-requests: write
  issues: read
  actions: read
  metadata: read

jobs:
  review-pr:
    runs-on: ubuntu-latest
    if: github.event_name == 'repository_dispatch' || (github.event_name != 'repository_dispatch' && github.repository != 'venture-alaska-tango/.github')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set PR variables
        id: pr-vars
        run: |
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            echo "repo=${{ github.event.client_payload.repo }}" >> $GITHUB_OUTPUT
            echo "pr_number=${{ github.event.client_payload.pr_number }}" >> $GITHUB_OUTPUT
          else
            echo "repo=${{ github.repository }}" >> $GITHUB_OUTPUT
            echo "pr_number=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          fi

      - name: Prepare Devin Review
        id: prepare-review
        run: |
          echo "Preparing Devin review for repo: ${{ steps.pr-vars.outputs.repo }}, PR: ${{ steps.pr-vars.outputs.pr_number }}"
          echo "Devin will clone the repository and fetch PR files directly to bypass cross-repo API limitations"
          echo "review-ready=true" >> $GITHUB_OUTPUT

      - name: Create Devin Review Session
        id: devin-review
        env:
          DEVIN_API_KEY: ${{ secrets.DEVIN_API_KEY }}
        run: |
          PROMPT_TEMPLATE=$(cat .github/workflows/prompt-template.txt)
          PROMPT=$(echo "$PROMPT_TEMPLATE" | sed "s/{{REPO}}/${{ steps.pr-vars.outputs.repo }}/g" | sed "s/{{PR_NUMBER}}/${{ steps.pr-vars.outputs.pr_number }}/g")
          
          ESCAPED_PROMPT=$(echo "$PROMPT" | jq -Rs .)
          
          RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer $DEVIN_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{\"prompt\": $ESCAPED_PROMPT}" \
            "https://api.devin.ai/v1/sessions")
          
          ERROR_MSG=$(echo "$RESPONSE" | jq -r '.detail')
          if [ "$ERROR_MSG" != "null" ]; then
            echo "Error creating Devin session: $ERROR_MSG"
            exit 1
          fi
          
          SESSION_ID=$(echo "$RESPONSE" | jq -r '.session_id')
          SESSION_URL=$(echo "$RESPONSE" | jq -r '.url')
          
          if [ -z "$SESSION_ID" ] || [ -z "$SESSION_URL" ]; then
            echo "Error: Devin session details are missing from the response."
            exit 1
          fi
          
          echo "session-id=$SESSION_ID" >> $GITHUB_OUTPUT
          echo "session-url=$SESSION_URL" >> $GITHUB_OUTPUT
          echo "Devin session created successfully: $RESPONSE"
